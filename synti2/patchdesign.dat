# Patch design.
#
# Lines beginning with '#' and empty lines are ignored by tools.
#
# The C code for patch format is generated from this file.
#
# As of now (2012-02-15), the sound algorithm is still on sketch level.
#
# TODO: Think if there should be a "global envelope bank"? Noo.. would
# be too different from a "usual synth interface" which I want to aim
# at (in addition to any other goals)..
#
# Global data (to be planned)
#   TODO: *Can we use the same int3/int7/float -structure for global data
#         and for patches. Simplifies reader maybe.. "Patch 0"== global
#
#   Ideas:
#
#   Patch selection on each channel/part (range 0-127?)?:
#   0   0   0   0   0   0   0   0   0   0 
#   0   0   0   0   0   0
#
#   Could be done with normal program change messages!?
# Mixer section?

# Volume -> Mix
# 1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
# 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0

# Volume -> Effect1
# 1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
# 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0

# Volume -> Effect2
# 1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
# 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0

# Pan?
# 1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
# 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0

# Some two stereo effect lines would be nice.
# Maybe just some sort of stereo delays..

# Global parameters would be something like:
#  Delay1                       Delay2
#  length  feedback  LPcutoff   length  feedback  LPcutoff

# Or... should the effects be abstracted as "imaginary part 17" etc.?

##############  Patch data 

# Format, one line per parameter: NAME Description MIN MAX GUIPrecision GUIGroup

# FIXME: Some more hints for the GUI should be given, like precision
# and a background color!!

# 3-bit integer parameters:
# These end up as SYNTI2_I3_NAME
[I3]
# Index of the envelope whose end is end-of-life for the sound.
# For "normal" patches this presumably is the carrier volume envelope..
ELIFE LifeEnvelope 0 6 0 1

# Indices of the operator amplitude envelopes
EAMP1 Op1AmpEnv 0 6   0 0
EAMP2 Op2AmpEnv 0 6   0 0
EAMP3 Op3AmpEnv 0 6   0 0
EAMP4 Op4AmpEnv 0 6   0 0
EAMPN NoiseAmpEnv 0 6   0 4

# Indices of the pitch envelopes
EPIT1 Op1PitchEnv 0 6   0 1
EPIT2 Op2PitchEnv 0 6   0 1
EPIT3 Op3PitchEnv 0 6   0 1
EPIT4 Op4PitchEnv 0 6   0 1

# Number of envelope knees to jump backwards from last knee
# if looping envelope logic is compiled in.
# DANGER: all-zero times inside loop lead to infinite iteration!!!
ELOOP1 En1LoopLen 0 3   0 2
ELOOP2 En2LoopLen 0 3   0 2
ELOOP3 En3LoopLen 0 3   0 2
ELOOP4 En4LoopLen 0 3   0 2
ELOOP5 En5LoopLen 0 3   0 2
ELOOP6 En6LoopLen 0 3   0 2

# Total of 16 seem to be critically useful.. no.. there is more!!

FMTO1 FModTo1 0 5   0 3
FMTO2 FModTo2 0 5   0 3
FMTO3 FModTo3 0 5   0 3
FMTO4 FModTo4 0 5   0 3

ADDTO1 MixTo1 0 5   0 4
ADDTO2 MixTo2 0 5   0 4
ADDTO3 MixTo3 0 5   0 4
ADDTO4 MixTo4 0 5   0 4

# 7-bit integer parameters:
#
[I7]
# (ideas: Envelope gain (to counteract unwanted pitch-env-by-default?))

# So far only padding (let us see if these are necessary at all)
UNUSED0 Unused 0 127   0 5
UNUSED1 Unused 0 127   0 5
UNUSED2 Unused 0 127   0 5
UNUSED3 Unused 0 127   0 5
UNUSED4 Unused 0 127   0 5
UNUSED5 Unused 0 127   0 5
UNUSED6 Unused 0 127   0 5
UNUSED7 Unused 0 127   0 5

# "Floating point" parameters:

# Envelopes need to be first, ordered and consistent with the existing code!
[F]

ENVS    En1:1T 0 0.255   3 6
ENV1K1L En1:1L 0 1.27   2 6
ENV1K2T En1:2T  0 1.27   2 6
ENV1K2L En1:2L 0 1.27   2 6
ENV1K3T En1:3T  0 1.27   2 6
ENV1K3L En1:3L 0 1.27   2 6
ENV1K4T En1:4T  0 1.27   2 6
ENV1K4L En1:4L 0 1.27   2 6
ENV1K5T En1:5T  0 1.27   2 6
ENV1K5L En1:5L 0 1.27   2 6

ENV2K1T En2:1T  0 0.255   3 7
ENV2K1L En2:1L 0 5.11   2 7
ENV2K2T En2:2T  0 1.27   2 7
ENV2K2L En2:2L 0 5.11   2 7
ENV2K3T En2:3T  0 2.55   2 7
ENV2K3L En2:3L 0 5.11   2 7
ENV2K4T En2:4T  0 2.55   2 7
ENV2K4L En2:4L 0 5.11   2 7
ENV2K5T En2:5T  0 2.55   2 7
ENV2K5L En2:5L 0 5.11   2 7

ENV3K1T En3:1T 0 0.255   3 8
ENV3K1L En3:1L 0 12.7   1 8
ENV3K2T En3:2T 0 1.27   2 8
ENV3K2L En3:2L 0 12.7   1 8
ENV3K3T En3:3T 0 2.55   2 8
ENV3K3L En3:3L 0 12.7   1 8
ENV3K4T En3:4T 0 2.55   2 8
ENV3K4L En3:4L 0 12.7   1 8
ENV3K5T En3:5T 0 2.55   2 8
ENV3K5L En3:5L 0 12.7   1 8

ENV4K1T Env4Knee1Time  0 0.255   3 9
ENV4K1L Env4Knee1Level -1.27 1.27   2 9
ENV4K2T Env4Knee2Time  0 1.27   2 9
ENV4K2L Env4Knee2Level -1.27 1.27   2 9
ENV4K3T Env4Knee3Time  0 2.56   2 9
ENV4K3L Env4Knee3Level -1.27 1.27   2 9
ENV4K4T Env4Knee4Time  0 5.11   2 9
ENV4K4L Env4Knee4Level -1.27 1.27   2 9
ENV4K5T Env4Knee5Time  0 2.56   2 9
ENV4K5L Env4Knee5Level -1.27 1.27   2 9

ENV5K1T Env5Knee1Time  0  1.27   2 10
ENV5K1L Env5Knee1Level -63 +64   0 10
ENV5K2T Env5Knee2Time  0  1.27   2 10
ENV5K2L Env5Knee2Level -63 +64   0 10
ENV5K3T Env5Knee3Time  0  1.27   2 10
ENV5K3L Env5Knee3Level -63 +64   0 10
ENV5K4T Env5Knee4Time  0  1.27   2 10
ENV5K4L Env5Knee4Level -63 +64   0 10
ENV5K5T Env5Knee5Time  0  1.27   2 10
ENV5K5L Env5Knee5Level -63 +64   0 10

ENV6K1T Env6Knee1Time  0 1.27   2  11
ENV6K1L Env6Knee1Level -31.0 32.0   1 11
ENV6K2T Env6Knee2Time  0 1.27   2 11
ENV6K2L Env6Knee2Level -31.0 32.0   1 11
ENV6K3T Env6Knee3Time  0 1.27   2 11
ENV6K3L Env6Knee3Level -31.0 32.0   1 11
ENV6K4T Env6Knee4Time  0 1.27   2 11
ENV6K4L Env6Knee4Level -31.0 32.0   1 11
ENV6K5T Env6Knee5Time  0 1.27   2 11
ENV6K5L Env6Knee5Level -31.0 32.0   1 11

# Detune/Relative fundamental pitch (added to "note from keyboard")
# FIXME: This might be better as a normal CC -> MIDI-controllability
# FIXME: Think about CCs overall

DT1 Oper1Detune  -31.0 32.0   1 12
DT2 Oper2Detune  -31.0 32.0   1 12
DT3 Oper3Detune  -31.0 32.0   1 12
DT4 Oper4Detune  -31.0 32.0   1 12
xxx UNUSED0      -31.0 32.0   1 12


# Source Levels (before multiplicative amplitude envelope)
# This is for additional "gain" or phase inversion. TODO: Is this useful?

LV1 Oper1Level -8.0 8.0   2 13
LV2 Oper2Level -8.0 8.0   2 13
LV3 Oper3Level -8.0 8.0   2 13
LV4 Oper4Level -8.0 8.0   2 13
LVN NoiseLevel -8.0 8.0   2 13

# Other patch data.. Hmm.. playground as of now:

# Ampl. Velocity sensitivity (0=no effect 1=fully sensitive) 
# Think about using the rise and fall wavetables to their full
# capacity here... more than in (vs * rise[vel<<9] + (1-vs)) * ampl

VS1 Oper1VelSens 0 1   2 14
VS2 Oper2VelSens 0 1   2 14
VS3 Oper3VelSens 0 1   2 14
VS4 Oper4VelSens 0 1   2 14
VSN NoiseVelSens 0 1   2 14
VSC FiltCutVelSens 0 1   2 14

# Pitch note follow ratio (FIXME: Can make zero default? fall[]?)

PF1 Oper1NoteFollow 0 1   2 15
PF2 Oper2NoteFollow 0 1   2 15
PF3 Oper3NoteFollow 0 1   2 15
PF4 Oper4NoteFollow 0 1   2 15


# Padding to get a power-of-two length for the instrument patch?
# hmmm.. why power of two? Well, just in case some bit-shifting..

# Padding should be done by the tool programs...
