# Patch design.
#
# Lines beginning with '#' and empty lines are ignored by tools.
#
# The C code for patch format is generated from this file.
#
# As of now (2012-02-15), the sound algorithm is still on sketch level.
#
# TODO: Think if there should be a "global envelope bank"? Noo.. would
# be too different from a "usual synth interface" which I want to aim
# at (in addition to any other goals)..
#
# Global data (to be planned)
#   TODO: *Can we use the same int3/int7/float -structure for global data
#         and for patches. Simplifies reader maybe.. "Patch 0"== global
#
#   Ideas:
#
#   Patch selection on each channel/part (range 0-127?)?:
#   0   0   0   0   0   0   0   0   0   0 
#   0   0   0   0   0   0
#
#   Could be done with normal program change messages!?
# Mixer section?

# Volume -> Mix
# 1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
# 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0

# Volume -> Effect1
# 1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
# 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0

# Volume -> Effect2
# 1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
# 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0

# Pan?
# 1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
# 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0

# Some two stereo effect lines would be nice.
# Maybe just some sort of stereo delays..

# Global parameters would be something like:
#  Delay1                       Delay2
#  length  feedback  LPcutoff   length  feedback  LPcutoff

# Or... should the effects be abstracted as "imaginary part 17" etc.?

##############  Patch data 

# Format, one line per parameter: NAME Description MIN MAX 

# 3-bit integer parameters:
# These end up as SYNTI2_I3_NAME
[I3]
# Index of the envelope whose end is end-of-life for the sound.
# For "normal" patches this presumably is the carrier volume envelope..
ELIFE LifeEnvelope

# Indices of the operator amplitude envelopes
EAMP1 Oper1AmpEnv 0 6
EAMP2 Oper2AmpEnv 0 6
EAMP3 Oper3AmpEnv 0 6
EAMP4 Oper4AmpEnv 0 6
EAMPN NoiseAmpEnv 0 6

# Indices of the pitch envelopes
EPIT1 Oper1PitchEnv 0 6
EPIT2 Oper2PitchEnv 0 6
EPIT3 Oper3PitchEnv 0 6
EPIT4 Oper4PitchEnv 0 6

# Number of envelope knees to jump backwards from last knee
# if looping envelope logic is compiled in.
# DANGER: all-zero times inside loop lead to infinite iteration!!!
ELOOP1 Env1LoopLen 0 3
ELOOP2 Env2LoopLen 0 3
ELOOP3 Env3LoopLen 0 3
ELOOP4 Env4LoopLen 0 3
ELOOP5 Env5LoopLen 0 3
ELOOP6 Env6LoopLen 0 3

# Total of 16 seem to be critically useful..


# 7-bit integer parameters:
#
[I7]
# (ideas: Envelope gain (to counteract unwanted pitch-env-by-default?))

# So far only padding (let us see if these are necessary at all)
UNUSED0 Unused 0 127
UNUSED1 Unused 0 127
UNUSED2 Unused 0 127
UNUSED3 Unused 0 127
UNUSED4 Unused 0 127
UNUSED5 Unused 0 127
UNUSED6 Unused 0 127
UNUSED7 Unused 0 127

# "Floating point" parameters:

[F]

ENVS Env1Knee1Time 0 1.27
ENV1K1L Env1Knee1Level 0 1.27
ENV1K2T Env1Knee2Time  0 1.27
ENV1K2L Env1Knee2Level 0 1.27
ENV1K3T Env1Knee3Time  0 1.27
ENV1K3L Env1Knee3Level 0 1.27
ENV1K4T Env1Knee4Time  0 1.27
ENV1K4L Env1Knee4Level 0 1.27
ENV1K5T Env1Knee5Time  0 1.27
ENV1K5L Env1Knee5Level 0 1.27

ENV2K1T Env2Knee1Time  0 5.11
ENV2K1L Env2Knee1Level 0 5.11
ENV2K2T Env2Knee2Time  0 5.11
ENV2K2L Env2Knee2Level 0 5.11
ENV2K3T Env2Knee3Time  0 5.11
ENV2K3L Env2Knee3Level 0 5.11
ENV2K4T Env2Knee4Time  0 5.11
ENV2K4L Env2Knee4Level 0 5.11
ENV2K5T Env2Knee5Time  0 5.11
ENV2K5L Env2Knee5Level 0 5.11

ENV3K1T Env3Knee1Time  0 12.7
ENV3K1L Env3Knee1Level 0 12.7
ENV3K2T Env3Knee2Time  0 12.7
ENV3K2L Env3Knee2Level 0 12.7
ENV3K3T Env3Knee3Time  0 12.7
ENV3K3L Env3Knee3Level 0 12.7
ENV3K4T Env3Knee4Time  0 12.7
ENV3K4L Env3Knee4Level 0 12.7
ENV3K5T Env3Knee5Time  0 12.7
ENV3K5L Env3Knee5Level 0 12.7

ENV4K1T Env4Knee1Time  0 5.11
ENV4K1L Env4Knee1Level -1.27 1.27
ENV4K2T Env4Knee2Time  0 5.11
ENV4K2L Env4Knee2Level -1.27 1.27
ENV4K3T Env4Knee3Time  0 5.11
ENV4K3L Env4Knee3Level -1.27 1.27
ENV4K4T Env4Knee4Time  0 5.11
ENV4K4L Env4Knee4Level -1.27 1.27
ENV4K5T Env4Knee5Time  0 5.11
ENV4K5L Env4Knee5Level -1.27 1.27

ENV5K1T Env5Knee1Time  0 1.27
ENV5K1L Env5Knee1Level -63 +63
ENV5K2T Env5Knee2Time  0 1.27
ENV5K2L Env5Knee2Level -63 +63
ENV5K3T Env5Knee3Time  0 1.27
ENV5K3L Env5Knee3Level -63 +63
ENV5K4T Env5Knee4Time  0 1.27
ENV5K4L Env5Knee4Level -63 +63
ENV5K5T Env5Knee5Time  0 1.27
ENV5K5L Env5Knee5Level -63 +63

ENV6K1T Env6Knee1Time  0 1.27
ENV6K1L Env6Knee1Level -12.7 12.7
ENV6K2T Env6Knee2Time  0 1.27
ENV6K2L Env6Knee2Level -12.7 12.7
ENV6K3T Env6Knee3Time  0 1.27
ENV6K3L Env6Knee3Level -12.7 12.7
ENV6K4T Env6Knee4Time  0 1.27
ENV6K4L Env6Knee4Level -12.7 12.7
ENV6K5T Env6Knee5Time  0 1.27
ENV6K5L Env6Knee5Level -12.7 12.7

# Detune/Relative fundamental pitch (added to "note from keyboard")
# FIXME: This might be better as a normal CC -> MIDI-controllability
# FIXME: Think about CCs overall

DT1 Oper1Detune  -12.7 12.7
DT2 Oper2Detune  -12.7 12.7
DT3 Oper3Detune  -12.7 12.7
DT4 Oper4Detune  -12.7 12.7
xxx UNUSED0      -12.7 12.7


# Source Levels (before multiplicative amplitude envelope)
# This is for additional "gain" or phase inversion. TODO: Is this useful?

LV1 Oper1Level -12.7 12.7
LV2 Oper2Level -12.7 12.7
LV3 Oper3Level -12.7 12.7
LV4 Oper4Level -12.7 12.7
LVN NoiseLevel -12.7 12.7

# Other patch data.. Hmm.. playground as of now:

# Ampl. Velocity sensitivity (0=no effect 1=fully sensitive) 
# Think about using the rise and fall wavetables to their full
# capacity here... more than in (vs * rise[vel<<9] + (1-vs)) * ampl

VS1 Oper1VelSens 0 1
VS2 Oper2VelSens 0 1
VS3 Oper3VelSens 0 1
VS4 Oper4VelSens 0 1
VSN NoiseVelSens 0 1
VSC FiltCutVelSens 0 1

# Pitch note follow ratio (FIXME: Can make zero default? fall[]?)

PF1 Oper1NoteFollow 0 1
PF2 Oper2NoteFollow 0 1
PF3 Oper3NoteFollow 0 1
PF4 Oper4NoteFollow 0 1


# Padding to get a power-of-two length for the instrument patch?
# hmmm.. why power of two? Well, just in case some bit-shifting..

# Padding should be done by the tool programs...
